- name: Update repositories cache and install Guake
  become: true
  ansible.builtin.apt:
    name: guake
    update_cache: yes
  tags:
    - install
    - apps
    - ubuntu

- name: Restore guake prefs
  ansible.builtin.shell: guake --restore-preferences $HOME/.config/guake/prefs.guake
  tags:
    - install
    - apps
    - ubuntu

- name: Add Solaar repository
  become: true
  ansible.builtin.apt_repository:
    repo: ppa:solaar-unifying/stable
    state: present
  tags:
    - install
    - apps
    - ubuntu

# Used to list Logi mouse and keyboard devices
- name: Update repositories cache and install Solaar
  become: true
  ansible.builtin.apt:
    name: solaar
    update_cache: yes
  tags:
    - install
    - apps
    - ubuntu

# https://albertlauncher.github.io/installation/
- name: Download Albert GPG key
  ansible.builtin.get_url:
    url: https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_{{ ubuntu_version }}/Release.key
    dest: /tmp/albert-release.key
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - albert

- name: Convert key to binary and place in /usr/share/keyrings
  ansible.builtin.command: >
    gpg --dearmor -o /usr/share/keyrings/home_manuelschneid3r.gpg /tmp/albert-release.key
  args:
    creates: /usr/share/keyrings/home_manuelschneid3r.gpg
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - albert

- name: Add Albert APT repository for Ubuntu {{ ubuntu_version }}
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/home_manuelschneid3r.gpg] http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_{{ ubuntu_version }}/ /"
    filename: home_manuelschneid3r
    state: present
    update_cache: no
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - albert

- name: Install Albert launcher
  ansible.builtin.apt:
    name: albert
    state: present
    update_cache: true
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - albert

- name: Download Google Linux signing key
  ansible.builtin.get_url:
    url: https://dl.google.com/linux/linux_signing_key.pub
    dest: /tmp/google-signing-key.pub
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - chrome

- name: Convert key to binary and place in /usr/share/keyrings
  ansible.builtin.command: >
    gpg --dearmor -o /usr/share/keyrings/google.gpg /tmp/google-signing-key.pub
  args:
    creates: /usr/share/keyrings/google.gpg
  become: true
  tags:
    - install
    - apps
    - ubuntu
    - chrome

- name: Add Google Chrome APT repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/google.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
    state: present
    filename: google-chrome
  tags:
    - install
    - apps
    - ubuntu
    - chrome

- name: Install Google Chrome
  become: true
  ansible.builtin.apt:
    name: google-chrome-stable
    state: present
    update_cache: true
  tags:
    - install
    - apps
    - ubuntu
    - chrome

- name: Install Flatpak
  become: true
  ansible.builtin.apt:
    name: flatpak
  tags:
    - install
    - apps
    - ubuntu
    - dejadup

- name: Configure Flathub
  ansible.builtin.command: >
    flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/flatpak/repo/flathub.trustedkeys.gpg"
  tags:
    - install
    - apps
    - ubuntu
    - dejadup

- name: Set fact if graphical session is active
  set_fact:
    has_display: "{{ ansible_env.DISPLAY | default('') | length > 0 }}"
  tags:
    - install
    - apps
    - ubuntu
    - dejadup
    - gnome

# Install DejaDup for backups. https://apps.gnome.org/DejaDup/
# Have to use flatpak to get the most recent versions with Restic.
- name: Install DejaDup (Flatpak user scope)
  ansible.builtin.command: >
    flatpak install --user -y flathub org.gnome.DejaDup
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/flatpak/app/org.gnome.DejaDup"
  tags:
    - install
    - apps
    - ubuntu
    - dejadup
    - gnome
  when:
    - has_display

# Installing to backup Calibre library.
- name: Install Calibre dependencies
  become: true
  ansible.builtin.apt:
    name: libxcb-cursor0
  tags:
    - install
    - apps
    - ubuntu
    - calibre

# https://manual.calibre-ebook.com/faq.html#how-do-i-move-my-calibre-data-from-one-computer-to-another
# After installation, simply load backup with DejaDup
# and import the config from CalibreBackup directory.
- name: Install Calibre
  become: true
  ansible.builtin.shell: wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
  tags:
    - install
    - apps
    - ubuntu
    - calibre

- name: Enable Calibre Backup in systemd
  ansible.builtin.systemd_service:
    name: calibre-backup.timer
    enabled: true
    state: started
    scope: user
  tags:
    - install
    - apps
    - ubuntu
    - calibre
  when: ansible_service_mgr == 'systemd' and ansible_facts.virtualization_type != 'docker'
